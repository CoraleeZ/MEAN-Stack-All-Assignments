//1.Create a database called 'my_first_db'.
use my_first_db



//2.Create students collection.
db.createCollection('students')



//3.Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}})





//4.Create 5 students with the appropriate info.

> db.students.insert({name:"Harry",home_state:"MD",lucky_number:10,birthday:{month:12,day:2,year:1998}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"John",home_state:"VA",lucky_number:3,birthday:{month:9,day:4,year:2001}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"Ken",home_state:"CA",lucky_number:5,birthday:{month:3,day:9,year:2002}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"Kate",home_state:"WA",lucky_number:24,birthday:{month:5,day:23,year:1999}})
WriteResult({ "nInserted" : 1 })
> db.students.insert({name:"Marry",home_state:"OR",lucky_number:92,birthday:{month:6,day:14,year:1999}})
WriteResult({ "nInserted" : 1 })





//5.Get all students.
db.students.find()



//6.Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo).
 db.students.find({$or:[{home_state:'WA'},{home_state:'CA'}]})


//7.Get all students whose lucky number is:
greater than 3 less than or equal to 10
between 1 and 9 (inclusive)

db.students.find({lucky_number:{$gt:3,$lte:10}})




//8.Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.


db.students.update({},{$set:{interest:['coding','brunch','MongoDB']}},{multi:true})


//9.Add some unique interests for each particular student into each of their interest arrays.

db.students.update({name:'Harry'},{$push:{interest:"hiking"}})
db.students.update({name:'John'},{$push:{interest:"snowboard"}})
 db.students.update({name:'Ken'},{$push:{interest:"PC game"}})
 db.students.update({name:'Kate'},{$push:{interest:"surfing"}})
db.students.update({name:'Marry'},{$push:{interest:"cooking"}})



//10.Add the interest 'taxes' into someone's interest array.
db.students.update({name:'Marry'},{$push:{interest:"taxes"}})


//11.Remove the 'taxes' interest you just added.
db.students.update({name:'Marry'},{$pop:{interest:1}})


//12.Remove all students who are from California.
db.students.remove({home_state:'CA'})


//13.Remove a student by name.
 db.students.remove({name:'Marry'})


 
//14.Remove a student whose lucky number is greater than 5 (JUST ONE)

db.students.remove({lucky_number:{$gt:5}},false)



//15.Add a field to each student collection called 'number_of_belts' and set it to 0.
 db.students.update({},{$set:{number_of_belt:0}},{multi:true})







//16.Increment this field by 1 for all students in Washington (Seattle Dojo).
db.students.update({home_state:'WA'},{$set:{number_of_belt:1}})


//17.Rename the 'number_of_belts' field to 'belts_earned'

db.students.update({},{$rename:{'number_of_belt':'belts_earned'}},{multi:true})


//18.Remove the 'lucky_number' field.

 db.students.update({},{$unset:{'lucky_number':''}},{multi:true})




//19.Add a 'updated_on' field, and set the value as the current date.

 db.students.update({},{$currentDate:{update_on:{$type:'date'}}},{multi:true})